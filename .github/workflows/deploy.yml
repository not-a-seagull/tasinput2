name: deploy

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  deploy:
    name: Deploy
    runs-on: windows-latest
    steps:
     - uses: actions/checkout@master
     - name: Install Rust
       run: rustup update stable
     - name: Set Rust Default Toolchain
       run: rustup default stable
       if: success()
     
     # install QT
     - name: Install Qt
       uses: jurplel/install-qt-action@v2

     # install MSVC if we're using Windows
     - name: Install MSVC Build Tools (Windows)
       uses: ilammy/msvc-dev-cmd@v1

     # install LLVM
     - name: Install LLVM (Windows)
       if: matrix.os == 'windows-latest'
       shell: powershell
       run: |
         Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
         scoop install llvm --global
         gci env:* | ForEach-Object { Write-Output ("::set-env name=" + $_.name + "::" + $_.value) }
         Write-Output ("::set-env name=LIBCLANG_PATH::C:\ProgramData\scoop\apps\llvm\current\lib")

     - run: cargo build --release
     - name: Compress Project
       run: 7z a tasinput2.7z target/release/libtasinput2.dll
     - name: Create Release
       uses: actions/create-release@v1.0.0
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
         tag_name: ${{ github.ref }}
         release_name: Release ${{ github.ref }}
         draft: false
         prerelease: false
     - name: Upload Release Asset
       id: upload-release-asset 
       uses: actions/upload-release-asset@v1.0.1
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
         upload_url: ${{ steps.create_release.outputs.upload_url }} 
         asset_path: ./tasinput2.7z
         asset_name: tasinput2-windows.7z
         asset_content_type: application/x-7z-compressed
