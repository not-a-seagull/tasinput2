parameters:
  toolchain: stable
  components: []
  targets: []

steps:
  # Linux and MacOS
  - script: |
      set -e
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $TOOLCHAIN
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    env:
      TOOLCHAIN: ${{parameters.toolchain}}
    displayName: "Install rust (Linux/MacOS)"
    condition: not(eq(variables['Agent.OS'], 'Windows_NT'))

  # Windows
  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-toolchain %TOOLCHAIN%
      set PATH=%PATH%;%USERPROFILE%\.cargo\bin
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
    env:
      TOOLCHAIN: ${{parameters.rustup_toolchain}}
    displayName: "Install rust (windows)"
    condition: eq(variables['Agent.OS'], 'Windows_NT')

  # Additional Needed Components
  - ${{ each component in parameters.components }}:
    - script: rustup component add ${{ component }}
      displayName: "Adding commponent ${{ component }}"

  # Add required targets
  - ${{ each target in parameters.targets }}:
    - script: rustup target add ${{ target }}
      displayName: "Adding target '${{ target }}'"

  # Set default rust version
  - bash: |
      rustup default $RUSTUP_TOOLCHAIN
      rustup update $RUSTUP_TOOLCHAIN
    env:
      RUSTUP_TOOLCHAIN: ${{parameters.rustup_toolchain}}
    displayName: "Set default Rust version"

  # Print the versions installed
  - script: |
      rustup -V
      rustup component list --installed
      rustup show
      rustc -Vv
      cargo -V
    displayName: "Show rust tools installed"
